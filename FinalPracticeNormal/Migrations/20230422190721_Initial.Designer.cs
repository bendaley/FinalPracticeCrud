// <auto-generated />
using FinalPracticeNormal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalPracticeNormal.Migrations
{
    [DbContext(typeof(BryceApplicationContext))]
    [Migration("20230422190721_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("FinalPracticeNormal.Models.GetBryce", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MajorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TommyJohn")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplicationId");

                    b.HasIndex("MajorId");

                    b.ToTable("HopefulResponses");

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            Age = 22,
                            FirstName = "Ben",
                            LastName = "Daley",
                            MajorId = 1,
                            Phone = "385-867-5309",
                            TommyJohn = true
                        },
                        new
                        {
                            ApplicationId = 2,
                            Age = 22,
                            FirstName = "Jessica",
                            LastName = "Daley",
                            MajorId = 1,
                            Phone = "435-435-4354",
                            TommyJohn = false
                        },
                        new
                        {
                            ApplicationId = 3,
                            Age = 23,
                            FirstName = "Collin",
                            LastName = "Klomp",
                            MajorId = 2,
                            Phone = "801-801-8018",
                            TommyJohn = true
                        });
                });

            modelBuilder.Entity("FinalPracticeNormal.Models.Major", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MajorName")
                        .HasColumnType("TEXT");

                    b.HasKey("MajorId");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            MajorId = 1,
                            MajorName = "Information Systems"
                        },
                        new
                        {
                            MajorId = 2,
                            MajorName = "Mechanical Engineering"
                        },
                        new
                        {
                            MajorId = 3,
                            MajorName = "Elementary Education"
                        },
                        new
                        {
                            MajorId = 4,
                            MajorName = "Actuarial Science"
                        },
                        new
                        {
                            MajorId = 5,
                            MajorName = "Neuroscience"
                        },
                        new
                        {
                            MajorId = 6,
                            MajorName = "Undeclared"
                        });
                });

            modelBuilder.Entity("FinalPracticeNormal.Models.GetBryce", b =>
                {
                    b.HasOne("FinalPracticeNormal.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
